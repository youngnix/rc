;; Comments are prefixed by double-semicolon. A single semicolon is parsed as the
;; keyboard key. Comments are ignored for the configuration file.
;;
;; This configuration language is Lisp-like. If you're unfamiliar with Lisp,
;; don't be alarmed. The maintainer jtroo is also unfamiliar with Lisp. You
;; don't need to know Lisp in-depth to be able to configure kanata.
;;
;; If you follow along with the examples, you should be fine. Kanata should
;; also hopefully have helpful error messages in case something goes wrong.
;; If you need help, you are welcome to ask.

;; Only one defsrc is allowed.
;;
;; defsrc defines the keys that will be intercepted by kanata. The order of the
;; keys matches with deflayer declarations and all deflayer declarations must
;; have the same number of keys as defsrc. Any keys not listed in defsrc will
;; be passed straight to the operating system.
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft 102d z    x    c    v    b    n    m    ,    .    /    ro   rsft
  lctl      lmet lalt      spc       ralt rctl 
)

;; The first layer defined is the layer that will be active by default when
;; kanata starts up. This layer is the standard graphite layout except for the
;; backtick/grave key (@grl) which is an alias for a tap-hold key.
(deflayer graphite
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]
  esc  @m_a @m_s @m_d @m_f g    h   @m_j  @m_k @m_l @m_; ,    ret
  XX   102d z    x    c    v    b    n    m    ,    .    /    ro   rsft
  XX        XX   @qrt        spc       XX   XX
)

(defvar
 tt 0
 ht 200
)

;; defalias is used to declare a shortcut for a more complicated action to keep
;; the deflayer declarations clean and aligned. The alignment in deflayers is not
;; necessary, but is strongly recommended for ease of understanding visually.
;;
;; Aliases are referred to by `@<alias_name>`.
(defalias
  m_a (tap-hold $tt $ht a lmet)
  m_s (tap-hold $tt $ht s lalt)
  m_d (tap-hold $tt $ht d lctl)
  m_f (tap-hold $tt $ht f lsft)
  m_j (tap-hold $tt $ht j lsft)
  m_k (tap-hold $tt $ht k lctl)
  m_l (tap-hold $tt $ht l lalt)
  m_; (tap-hold $tt $ht ; lmet)
)

(defcfg
 concurrent-tap-hold true)

(defchordsv2
 (d f) bspc 1000 all-released (graphite)
 (j k) ret 1000 all-released (graphite)
)

(deflayer layers
  _  _    lrld    _    _    _    _    _
  _  _    _    _    _    _    _
  _  _    _    _    _    _    _
  _ _ _    _    _    _    _    _   _
  _      _ _      _       _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
)
